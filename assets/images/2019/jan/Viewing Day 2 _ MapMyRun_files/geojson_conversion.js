mmf_mapping_api.define([],function(){var e=function(e,o){var t,r,n=function(e,o,t){var r,a,l,g,c,p,u,m,h,f,b=window.google;switch(e.type){case"Point":o.position=new b.maps.LatLng(e.coordinates[1],e.coordinates[0]),r=new b.maps.Marker(o),t&&r.set("geojsonProperties",t);break;case"MultiPoint":for(r=[],a=0;a<e.coordinates.length;a++)o.position=new b.maps.LatLng(e.coordinates[a][1],e.coordinates[a][0]),r.push(new b.maps.Marker(o));if(t)for(g=0;g<r.length;g++)r[g].set("geojsonProperties",t);break;case"LineString":for(m=[],a=0;a<e.coordinates.length;a++)p=e.coordinates[a],c=new b.maps.LatLng(p[1],p[0]),m.push(c);o.path=m,r=new b.maps.Polyline(o),t&&r.set("geojsonProperties",t);break;case"MultiLineString":for(r=[],a=0;a<e.coordinates.length;a++){for(m=[],l=0;l<e.coordinates[a].length;l++)p=e.coordinates[a][l],c=new b.maps.LatLng(p[1],p[0]),m.push(c);o.path=m,r.push(new b.maps.Polyline(o))}if(t)for(g=0;g<r.length;g++)r[g].set("geojsonProperties",t);break;case"Polygon":for(u=[],h=f=null,a=0;a<e.coordinates.length;a++){for(m=[],l=0;l<e.coordinates[a].length;l++)c=new b.maps.LatLng(e.coordinates[a][l][1],e.coordinates[a][l][0]),m.push(c);a?1===a?(f=i(m),h===f?u.push(m.reverse()):u.push(m)):h===f?u.push(m.reverse()):u.push(m):(h=i(m),u.push(m))}o.paths=u,r=new b.maps.Polygon(o),t&&r.set("geojsonProperties",t);break;case"MultiPolygon":for(u=[],h=f=null,r=[],a=0;a<e.coordinates.length;a++){for(l=0;l<e.coordinates[a].length;l++){for(m=[],g=0;g<e.coordinates[a][l].length;g++)c=new b.maps.LatLng(e.coordinates[a][l][g][1],e.coordinates[a][l][g][0]),m.push(c);l?1===l?(f=i(m),h===f?u.push(m.reverse()):u.push(m)):h===f?u.push(m.reverse()):u.push(m):(h=i(m),u.push(m))}o.paths=u,r.push(new b.maps.Polygon(o))}if(t)for(g=0;g<r.length;g++)r[g].set("geojsonProperties",t);break;case"GeometryCollection":if(r=[],e.geometries)for(a=0;a<e.geometries.length;a++)r.push(n(e.geometries[a],o,t||null));else r=s('Invalid GeoJSON object: GeometryCollection object missing "geometries" member.');break;default:r=s('Invalid GeoJSON object: Geometry object must be one of "Point", "LineString", "Polygon" or "MultiPolygon".')}return r},s=function(e){return{type:"Error",message:e}},i=function(e){for(var o,t=0,r=0;r<e.length-2;r++)t+=(e[r+1].lat()-e[r].lat())*(e[r+2].lng()-e[r].lng())-(e[r+2].lat()-e[r].lat())*(e[r+1].lng()-e[r].lng());return o=t>0?!0:!1},a=o||{};switch(e.type){case"FeatureCollection":if(e.features)for(t=[],r=0;r<e.features.length;r++)t.push(n(e.features[r].geometry,a,e.features[r].properties));else t=s('Invalid GeoJSON object: FeatureCollection object missing "features" member.');break;case"GeometryCollection":if(e.geometries)for(t=[],r=0;r<e.geometries.length;r++)t.push(n(e.geometries[r],a));else t=s('Invalid GeoJSON object: GeometryCollection object missing "geometries" member.');break;case"Feature":t=e.properties&&e.geometry?n(e.geometry,a,e.properties):s('Invalid GeoJSON object: Feature object missing "properties" or "geometry" member.');break;case"Point":case"MultiPoint":case"LineString":case"MultiLineString":case"Polygon":case"MultiPolygon":t=e.coordinates?t=n(e,a):s('Invalid GeoJSON object: Geometry object missing "coordinates" member.');break;default:t=s('Invalid GeoJSON object: GeoJSON object must be one of "Point", "LineString", "Polygon", "MultiPolygon", "Feature", "FeatureCollection" or "GeometryCollection".')}return t};return e});
//# sourceMappingURL=geojson_conversion.js.map