---
layout: post
title: "Setting up a Database Connection"
date: 2018-05-06 15:34:00 -0600
categories: "Android development"
---


![Database Connection Diagram]({{ "/assets/android/may/database_tutorial_diagram.png" }})



For me, one of the major challenges to learning Android development is also learning Java. I have worked with Java frameworks before such as Groovy Grails and Spring MVC, however, I never had to design a java application. Lot of my posts will be discussing some of the various Java OOD concepts that I am lacking such as interfaces and abstract classes. 

# Cursor
In this tutorial, the exercise has us use a cursor to store a query result set on the waitlist table. I read on stackoverflow that cursor stands for cursory-logic, meaning it will iterate over a result set.

# Context
Context is an interface that allows various resources to communicate with one another. Context stores global information about the application state. That is particularly handy when building new objects, access `SharedPreferences`, and accessing intents. The documentation on `Context` is absolutely insane and I am happy to stop here with this hyper simplified explanation. 


# Abstract Class 
Abstract classes are similar to interfaces. It hides the internal implementation and shows the functionlity to users. 

1. Share some methods among other classes.  
2. you can declare non-static and non-final methods inside of an abstract class.
# RecyclerView.Adapter

# Static vs Non-Static Methods

# Class vs Object vs Instance
`Class` is the blue print that creates an object
`Instance` is a single and unique unit of a class. For example, you can have to instances of the same class if you instantiate it twice
`Object` is a software bundle of related state and behavior. Objects combine properties and methods 

# GuestViewHolder class

Inner class to hold the views needed to display a single item in the recycler-view

extends RecyclerView.ViewHolder


